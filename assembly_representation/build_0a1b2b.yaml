transform:
  frame_id: "world"
  transform:
    translation:
      y: 0.3
      x: 0.6
      z: 0.02
    rotation:
      y: 0.7469166744613165
      x: -0.6646584989424609
      z: 0.009387090228191897
      w: -0.016013860629187193
  child_frame_id: "board"


floc_1:
  func: object(target)
  frame_id: "board"
​
floc_2:
  var1: difference(object("cube_holes"), complex("build_0a1b").object("cube_holes")) #cube
  func: var1.part("hole").empty().opposite(var1, var1.part("hole").empty())
  frame_id: "board"
​
floc_3:
  func: complex("build_0a1b").object("wafer").part("hole").empty()
  frame_id: "board"

floc_4:
  var1: from(ovc_2).now[0] #used hole in cube
  func: var1.parent.part("hole").opposite(var1.parent, var1)
  frame_id: "board"
​
floc_5:
  func: difference(complex("build_0a1b").object("wafer").part("hole").empty(), from(ovc_2).now[1]) #unused hole in wafer
  frame_id: "board"

floc_6:
  func: union(from(ovc_2).now[1], from(ovc_3).now[1]) #holes in wafers where the cube is
  frame_id: "board"

ovc_1:
  location_names:
    - floc_1
  action_types: build_0a1b
  location_description: []
  duration_ranges: {max: 1000, min: 0}
  groups: ["r1_arm", "r2_arm", "h1_arm", "h2_arm"]
  configuration_domains: []

ovc_2: #ovc_2 and ovc_3 in the same time!
  location_names:
    - floc_2
    - floc_3
  action_types: pnh
  location_description: []
  duration_ranges: {max: 1000, min: 0}
  groups: ["h1_arm", "h2_arm"]
  configuration_domains: []

ovc_3: #ovc_2 and ovc_3 in the same time!
  location_names:
    - floc_4
    - floc_5
  action_types: pnh
  location_description: []
  duration_ranges: {max: 1000, min: 0}
  groups: ["h1_arm", "h2_arm"]
  configuration_domains: []

ovc_4:
  location_names:
    - floc_6
  action_types: attach_b
  location_description: []
  duration_ranges: {max: 1000, min: 0}
  groups: ["r1_arm", "r2_arm", "h1_arm", "h2_arm"]
  configuration_domains: []

ct_1:
  ovc_name: ["ovc_1", "ovc_2"]
  ovc_interval: [-1, 1]
  params: []
  ct_type: 1

ct_2:
  ovc_name: ["ovc_2", "ovc_3"]
  ovc_interval: [1, -1]
  params: []
  ct_type: 1

ct_3:
  ovc_name: ["ovc_3", "ovc_4"]
  ovc_interval: [1, 1]
  params: []
  ct_type: 1

ct_4:
  ovc_name: ["ovc_4", "ovc_3"]
  ovc_interval: [1, 1]
  params: []
  ct_type: 2